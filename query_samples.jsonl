{"query":"SELECT g.\"genre\"\nFROM imdb.\"Genre\" as g\nINNER JOIN imdb.\"Title_Genre\" as tg\nON g.\"genreId\" = tg.\"genreId\"\n;","nl":""}
{"query":"SELECT ti.\"titleId\", g.\"genreId\"\nFROM imdb.\"Title\" as ti\nRIGHT OUTER JOIN imdb.\"Title_Genre\" as tg\nON ti.\"titleId\" = tg.\"titleId\"\nINNER JOIN imdb.\"Genre\" as g\nON tg.\"genreId\" = g.\"genreId\"\nWHERE g.\"genreId\" = '14';","nl":""}
{"query":"SELECT g.\"genreId\", ti.\"title\", ti.\"averageRating\"\nFROM imdb.\"Genre\" as g\nINNER JOIN imdb.\"Title_Genre\" as tg\nON g.\"genreId\" = tg.\"genreId\"\nINNER JOIN imdb.\"Title\" as ti\nON tg.\"titleId\" = ti.\"titleId\"\nWHERE g.\"genreId\" BETWEEN '12' AND '28' OR ti.\"title\" = 'Tot√≤ nella luna';","nl":""}
{"query":"SELECT p.\"profession\", pp.\"professionId\"\nFROM imdb.\"Profession\" as p\nRIGHT OUTER JOIN imdb.\"Person_Profession\" as pp\nON p.\"professionId\" = pp.\"professionId\"\nWHERE p.\"profession\" LIKE '%mera_d%';","nl":""}
{"query":"SELECT tg.\"genreId\"\nFROM imdb.\"Genre\" as g\nLEFT OUTER JOIN imdb.\"Title_Genre\" as tg\nON g.\"genreId\" = tg.\"genreId\"\nLEFT OUTER JOIN imdb.\"Title\" as ti\nON tg.\"titleId\" = ti.\"titleId\"\nRIGHT OUTER JOIN imdb.\"Title_Episode\" as te\nON ti.\"titleId\" = te.\"titleId\";","nl":""}
{"query":"SELECT g.\"genre\", ti.\"endYear\", ti.\"isAdult\"\nFROM imdb.\"Genre\" as g\nRIGHT OUTER JOIN imdb.\"Title_Genre\" as tg\nON g.\"genreId\" = tg.\"genreId\"\nINNER JOIN imdb.\"Title\" as ti\nON tg.\"titleId\" = ti.\"titleId\"\nWHERE g.\"genre\" NOT LIKE 'Ad%';","nl":" Title_Genre and <prep> Genre, even if there are no Title_Genre und Title_Genre and <prep> corresponding Title. and display genre, endYear und isAdult . <pron>  genre doesn't end with 'Ad'.   "}
{"query":"SELECT ti.\"runtimeMinutes\", te.\"seasonNumber\"\nFROM imdb.\"Genre\" as g\nRIGHT OUTER JOIN imdb.\"Title_Genre\" as tg\nON g.\"genreId\" = tg.\"genreId\"\nRIGHT OUTER JOIN imdb.\"Title\" as ti\nON tg.\"titleId\" = ti.\"titleId\"\nRIGHT OUTER JOIN imdb.\"Title_Episode\" as te\nON ti.\"titleId\" = te.\"titleId\"\nWHERE ti.\"runtimeMinutes\" IS NOT NULL;","nl":" Title_Genre and <prep> Genre, even if there are no Title_Genre und Title and <prep> Title_Genre, even if there are no Title und Title_Episode and <prep> Title, even if there are no Title_Episode. and display runtimeMinutes und seasonNumber . <pron>  runtimeMinutes undefined .   "}
{"query":"SELECT pe.\"personId\", pe.\"birthYear\"\nFROM imdb.\"Person\" as pe\nINNER JOIN imdb.\"Person_Profession\" as pp\nON pe.\"personId\" = pp.\"personId\"\nRIGHT OUTER JOIN imdb.\"Profession\" as p\nON pp.\"professionId\" = p.\"professionId\"\nWHERE pe.\"personId\" LIKE '%%';","nl":"Find all  Person and <prep> corresponding Person_Profession und Profession and <prep> Person_Profession, even if there are no Profession. <pron>  personId contains ''. . Display and display personId und birthYear .  "}
{"query":"SELECT ti.\"title\", tl.\"isOriginalTitle\"\nFROM imdb.\"Genre\" as g\nRIGHT OUTER JOIN imdb.\"Title_Genre\" as tg\nON g.\"genreId\" = tg.\"genreId\"\nINNER JOIN imdb.\"Title\" as ti\nON tg.\"titleId\" = ti.\"titleId\"\nRIGHT OUTER JOIN imdb.\"Title_Localization\" as tl\nON ti.\"titleId\" = tl.\"titleId\"\nWHERE ti.\"title\" NOT LIKE 'Episode %';","nl":"Find all   and  and Title_Localization and <prep> Title, even if <prep> have no Title_Localization. <pron>  title doesn't contains 'Episode '. . Display and display title and isOriginalTitle .  "}
{"query":"SELECT ti.\"endYear\", tg.\"titleId\"\nFROM imdb.\"Title\" as ti\nRIGHT OUTER JOIN imdb.\"Title_Genre\" as tg\nON ti.\"titleId\" = tg.\"titleId\"\nRIGHT OUTER JOIN imdb.\"Genre\" as g\nON tg.\"genreId\" = g.\"genreId\"\nWHERE tg.\"titleId\" NOT LIKE '1606%';","nl":"Find all  Title and Genre. <pron>  titleId doesn't end with '1606'. . Display and display endYear and titleId .  "}
{"query":"SELECT p.\"professionId\", pp.\"personId\", pp.\"professionId\"\nFROM imdb.\"Profession\" as p\nRIGHT OUTER JOIN imdb.\"Person_Profession\" as pp\nON p.\"professionId\" = pp.\"professionId\"\nWHERE p.\"professionId\" <> '36' OR pp.\"personId\" <> '11671872';","nl":"Find all  Profession <prep> for which <pron>  professionId unequal '36', personId unequal '11671872' .  Display  professionId, personId and professionId .  "}
